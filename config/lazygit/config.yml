customCommands:
  - key: "<c-c>"
    context: "global"
    description: "Create new conventional commit"
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "build"
            description: "Changes that affect the build system or external dependencies"
            value: "build"
          - name: "feat"
            description: "A new feature"
            value: "feat"
          - name: "fix"
            description: "A bug fix"
            value: "fix"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "ci"
            description: "Changes to CI configuration files and scripts"
            value: "ci"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "perf"
            description: "A code change that improves performance"
            value: "perf"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "revert"
            description: "Reverts a previous commit"
            value: "revert"
          - name: "style"
            description: "Changes that do not affect the meaning of the code"
            value: "style"
          - name: "test"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
      - type: "input"
        title: "Scope - Add '(<scope>)'"
        key: "Scope"
        initialValue: ""
      - type: "input"
        title: "Breaking change - Add '!'"
        key: "Breaking"
        initialValue: ""
      - type: "input"
        title: "message"
        key: "Message"
        initialValue: ""
      - type: "confirm"
        key: "Confirm"
        title: "Commit"
        body: "Are you sure you want to commit?"
    command: "git commit --message '{{.Form.Type}}{{.Form.Scope}}{{.Form.Breaking}}: {{.Form.Message}}'"
    loadingText: "Creating conventional commit..."
git:
  commit:
    autoWrapCommitMessage: true
    autoWrapWidth: 72
  paging:
    colorArg: always
    pager: delta --dark --paging=never
    useConfig: false
  autoFetch: false
  autoRefresh: true
gui:
  spinner:
      frames: ['⠋', '⠙', '⠹', '⠸', '⠼', '⠴', '⠦', '⠧', '⠇', '⠏']
      rate: 100
  windowSize: "normal"
  nerdFontsVersion: "3"
  skipDiscardChangeWarning: true
  sidePanelWidth: 0.3
  expandFocusedSidePanel: true
  expandedSidePanelWeight: 2
  theme:
    activeBorderColor:
      - "#f9c859"
      - bold
    inactiveBorderColor:
      - "#3476ff"
    searchingActiveBorderColor:
      - "#EEC843"
      - bold
    optionsTextColor:
      - "#5fb9bc"
    selectedLineBgColor:
      - "#41444d"
    cherryPickedCommitBgColor:
      - "#4483aa"
    cherryPickedCommitFgColor:
      - "#f9c859"
    unstagedChangesColor:
      - "#fc2f52"
    defaultFgColor:
      - "#3476ff"
  border: 'rounded'
  showRandomTip: false
  showBottomLine: true
  showDivergenceFromBaseBranch: onlyArrow
keybinding:
  universal:
    togglePanel: "<tab>"
    nextTab: "<Right>"
    prevTab: "<Left>"
    prevBlock: ""
    nextBlock: ""
notARepository: 'skip'
os:
  editInTerminal: false
  editPreset: "vscode"
refresher:
  fetchInterval: 60 # Re-fetch interval in seconds. Auto-fetch can be disabled via option 'git.autoFetch'.
  refreshInterval: 30 # File/submodule refresh interval in seconds. Auto-refresh can be disabled via option 'git.autoRefresh'.
